version: '3.9'

x-env-license: &env-license-volume '${NEXUS_LICENSE_PATH:?err}:/sonatype-license.lic:ro'

x-nxrm3-healthcheck: &nxrm3-healthcheck
  test:
    [
      "CMD",
      "curl",
      "--fail",
      "--silent",
      "http://localhost:8081/service/rest/v1/status/writable"
    ]
  interval: 10s
  timeout: 10s
  retries: 10
  start_period: 40s

x-nxiq-volume-data: &x-nxiq-volume-data 'nxiq-data:/sonatype-work'

x-nxiq-volume-logs: &x-nxiq-volume-logs 'nxiq-logs:/var/log/nexus-iq-server'

x-nxrm3-volume-data: &nxrm3-volume-data 'nxrm-data:/opt/sonatype/sonatype-work'

x-pgsql-volume-data: &pgsql-volume-data 'pg-data:/var/lib/postgresql/data'

x-pgsql-nxrm-volume-data: &pgsql-nxrm-volume-data 'pg-nxrm-data:/var/lib/postgresql/data'

services:

  nxiq-direct:
    image: "${NEXUS_DOCKER_IMAGE_ORGANIZATION}/nexus-iq-server:${NEXUS_IQ_SERVER_VERSION:?err}"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      JAVA_OPTS: "-Ddw.baseUrl=${NXLC_FQDN_URL:-http://iq.localhost:8070} -Djava.util.prefs.userRoot=/sonatype-work/javaprefs"
      DATABASE_TYPE: postgresql
      DATABASE_HOSTNAME: postgres
      DATABASE_PORT: ${PG_DB_PORT:-5432}
      DATABASE_NAME: ${PG_DB_NAME:?err}
      DATABASE_USERNAME: ${PG_DB_USER:?err}
      DATABASE_PASSWORD: ${PG_DB_PASS:?err}
    ports:
      - "8070:8070"
      - "8071:8071"
    profiles:
      - direct
    volumes:
      - *env-license-volume
      - "./config/nexus-iq-config.yaml:/etc/nexus-iq-server/config.yml:delegated"
      - *x-nxiq-volume-data
      - *x-nxiq-volume-logs
    
  nxiq-proxied:
    image: "${NEXUS_DOCKER_IMAGE_ORGANIZATION}/nexus-iq-server:${NEXUS_IQ_SERVER_VERSION:?err}"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      JAVA_OPTS: "-Ddw.baseUrl=${NXLC_FQDN_URL:-http://iq.localhost} -Djava.util.prefs.userRoot=/sonatype-work/javaprefs"
      DATABASE_TYPE: postgresql
      DATABASE_HOSTNAME: postgres
      DATABASE_PORT: ${PG_DB_PORT:-5432}
      DATABASE_NAME: ${PG_DB_NAME:?err}
      DATABASE_USERNAME: ${PG_DB_USER:?err}
      DATABASE_PASSWORD: ${PG_DB_PASS:?err}
    networks:
      - platform
    profiles:
      - proxied
      - cicd-jenkins
    volumes:
      - *env-license-volume
      - "./config/nexus-iq-config.yaml:/etc/nexus-iq-server/config.yml:delegated"
      - *x-nxiq-volume-data
      - *x-nxiq-volume-logs

  nxrm3-direct:
    image: "${NEXUS_DOCKER_IMAGE_ORGANIZATION}/nexus3:${NEXUS_REPOSITORY_VERSION:?err}"
    depends_on:
      postgres-nxrm:
        condition: service_healthy
    environment:
      DATABASE_PASSWORD: ${PG_DB_PASS:?err}
      INSTALL4J_ADD_VM_PARAMS: "-Xms2703m -Xmx2703m -XX:MaxDirectMemorySize=2703m -Dnexus.licenseFile=/sonatype-license.lic -Dnexus.datastore.enabled=true -Djava.util.prefs.userRoot=$${NEXUS_DATA}/javaprefs -Dnexus.datastore.nexus.jdbcUrl=jdbc:postgresql://postgres-nxrm:5432/nxrm -Dnexus.datastore.nexus.username=nxrm -Dnexus.datastore.nexus.password=$${DATABASE_PASSWORD} -Dnexus.datastore.clustered.enabled=true"
      NEXUS_SECURITY_RANDOMPASSWORD: 'false'
    healthcheck:
      <<: *nxrm3-healthcheck
    ports:
      - '8081:8081'
      - '8083:8083'
    profiles:
      - direct
    volumes:
      - *env-license-volume

  nxrm3_direct_oss:
    image: "${NEXUS_DOCKER_IMAGE_ORGANIZATION}/nexus3:${NEXUS_REPOSITORY_VERSION:?err}"
    environment:
      NEXUS_SECURITY_RANDOMPASSWORD: 'false'
    healthcheck:
      <<: *nxrm3-healthcheck
    ports:
      - '8081:8081'
      - '8083:8083'
    profiles:
      - repoOssDemo

  nxrm3-proxied:
    image: "${NEXUS_DOCKER_IMAGE_ORGANIZATION}/nexus3:${NEXUS_REPOSITORY_VERSION:?err}"
    depends_on:
      postgres-nxrm:
        condition: service_healthy
    environment:
      DATABASE_PASSWORD: ${PG_DB_PASS:?err}
      INSTALL4J_ADD_VM_PARAMS: "-Xms2703m -Xmx2703m -XX:MaxDirectMemorySize=2703m -Dnexus.licenseFile=/sonatype-license.lic -Dnexus.datastore.enabled=true -Djava.util.prefs.userRoot=$${NEXUS_DATA}/javaprefs -Dnexus.datastore.nexus.jdbcUrl=jdbc:postgresql://postgres-nxrm:5432/nxrm -Dnexus.datastore.nexus.username=nxrm -Dnexus.datastore.nexus.password=$${DATABASE_PASSWORD} -Dnexus.datastore.clustered.enabled=true"
      NEXUS_SECURITY_RANDOMPASSWORD: 'false'
    healthcheck:
      <<: *nxrm3-healthcheck
    networks:
      - platform
    ports:
      - '8083:8083'
    profiles:
      - proxied
      - cicd-jenkins
    volumes:
      - *env-license-volume

  postgres:
    image: "postgres:16.0-alpine3.18"
    environment:
      - POSTGRES_USER=${PG_DB_USER:?err}
      - POSTGRES_PASSWORD=${PG_DB_PASS:?err}
      - POSTGRES_DB=${PG_DB_NAME:?err}
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - default
      - platform
    ports:
      - '5432:5432'
    shm_size: 128mb
    user: '${UID}:${GID}'
    volumes:
      - *pgsql-volume-data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_DB_USER:?err}"]
      interval: 1s
      timeout: 5s
      retries: 10

  postgres-nxrm:
    image: "postgres:16.0-alpine3.18"
    command: -c 'max_connections=150'
    environment:
      - POSTGRES_USER=nxrm
      - POSTGRES_PASSWORD=${PG_DB_PASS:?err}
      - POSTGRES_DB=nxrm
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - default
      - platform
    ports:
      - '5433:5432'
    shm_size: 128mb
    user: '${UID}:${GID}'
    volumes:
      - *pgsql-nxrm-volume-data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nxrm"]
      interval: 1s
      timeout: 5s
      retries: 10

  proxy:
    image: "nginx:${NGINX_VERSION:?err}"
    depends_on:
      - nxrm3-proxied
      - nxiq-proxied
    environment:
      - NGINX_HOST=nexus-platform.localhost
      - NGINX_PORT=80
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "--silent",
          "http://localhost"
        ]
      interval: 15s
      timeout: 2s
      retries: 10
      start_period: 20s
    networks:
      - platform
    ports:
      - "80:80"
    profiles:
      - proxied
    volumes:
      - "./config/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./config/nginx-www:/usr/share/nginx/html:ro"

  proxy-cicd-jenkins:
    image: "nginx:${NGINX_VERSION:?err}"
    depends_on:
      - nxrm3-proxied
      - nxiq-proxied
      - jenkins-proxied
    environment:
      - NGINX_HOST=nexus-platform.localhost
      - NGINX_PORT=80
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "--silent",
          "http://localhost"
        ]
      interval: 15s
      timeout: 2s
      retries: 10
      start_period: 20s
    networks:
      - platform
    ports:
      - "80:80"
    profiles:
      - cicd-jenkins
    volumes:
      - "./config/nginx-cicd.conf:/etc/nginx/nginx.conf:ro"
      - "./config/nginx-www:/usr/share/nginx/html:ro"

  # ------- Other non Sonatype Services --------
  jenkins-direct:
    build: ./images/jenkins
    environment:
      JAVA_OPTS: '-Djenkins.install.runSetupWizard=false'
      JENKINS_OPTS: '--prefix=/jenkins --argumentsRealm.roles.user=admin --argumentsRealm.passwd.admin=admin --argumentsRealm.roles.admin=admin'
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "--silent",
          "http://localhost/jenkins/login"
        ]
      interval: 15s
      timeout: 2s
      retries: 10
      start_period: 30s
    ports:
      - '8888:8080'
    networks:
      - platform
    profiles:
      - jenkins
    volumes:
      - '${DOCKER_ROOT_VOLUME_MOUNT_POINT:?err}/jenkins:/var/jenkins_home:delegated'

  jenkins-proxied:
    build: ./images/jenkins
    environment:
      JAVA_OPTS: '-Djenkins.install.runSetupWizard=false'
      JENKINS_OPTS: '--prefix=/jenkins --argumentsRealm.roles.user=admin --argumentsRealm.passwd.admin=admin --argumentsRealm.roles.admin=admin'
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "--silent",
          "http://localhost/jenkins/login"
        ]
      interval: 15s
      timeout: 2s
      retries: 10
      start_period: 30s
    networks:
      - platform
    profiles:
      - cicd-jenkins
    volumes:
      - '${DOCKER_ROOT_VOLUME_MOUNT_POINT:?err}/jenkins:/var/jenkins_home:delegated'

  swagger-editor:
    image: "swaggerapi/swagger-editor:latest"
    environment:
      BASE_URL: /swagger-editor
    networks:
      - platform
    profiles:
      - swagger

  swagger-ui:
    image: "swaggerapi/swagger-ui:latest"
    environment:
      BASE_URL: /swagger-ui
    networks:
      - platform
    profiles:
      - swagger

  webhook-handler:
    image: sonatypecommunity/sonatype-webhook-handler:1.1.1
    environment:
      - CONFIG_FILE_PATH=/config.json
      - IQ_SERVER_URL=${NXLC_FQDN_URL:-http://iq.localhost:8070}
      - PORT=3000
    ports:
      - '3000:3000'
    profiles:
      - webhooks
    volumes:
      - ${WEBHOOK_HANDLER_CONFIG_PATH}:/config.json:ro

networks:
  default: null
  platform: null

volumes:
  nxiq-data:
  nxiq-logs:
  nxrm-data:
  pg-data:
  pg-nxrm-data: